  trigger: none

  resources:
  - repo: self

  pool:
    vmImage: 'ubuntu-latest'


  stages:
  - stage: TerraformDeployment
    displayName: 'Deploy resources using Terraform'
    jobs:
    - job: Terraform_IaC
      displayName: 'Deploy Infrastructures as Code'
      steps:
        - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-cli.TerraformCLI@0
          displayName: Terraform Init
          inputs:
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/iac'
            backendType: 'azurerm'
            backendServiceArm: 'Java-test-app'
            backendAzureRmSubscriptionId: '$(azureSubID)'
            backendAzureRmResourceGroupName: 'testDeploy'
            backendAzureRmStorageAccountName: 'javastate'
            backendAzureRmContainerName: 'javaterterraformstatefile'
            backendAzureRmKey: 'jsbrterraform.tfstate'
            allowTelemetryCollection: true
            
        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
          displayName: Terraform Plan
          inputs:
            command: 'plan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/iac'
            environmentServiceName: 'Java-test-app'
            providerAzureRmSubscriptionId: '$(azureSubID)'
            allowTelemetryCollection: true

        - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV4@4
          displayName: Terraform Apply
          inputs:
            command: 'apply'
            workingDirectory: '$(System.DefaultWorkingDirectory)/iac'
            environmentServiceName: 'Java-test-app'
            providerAzureRmSubscriptionId: '$(azureSubID)'
            allowTelemetryCollection: true
