name: jsbr CI/CD

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  DOCKER_REGISTRY: sbrcr.azurecr.io
  IMAGE_REPOSITORY: jsbrimagerepo
  DOCKERFILE_PATH: ./Dockerfile
  WEB_APP_NAME: jsbrwebapp
  APP_RESOURCE_GROUP: java-react-RG
  TAG: ${{ github.run_number }}
  # For Terraform
  client_id: ${{ secrets.APP_ID }}
  client_secret: ${{ secrets.CLIENT_SECRET }}
  tenant_id: ${{ secrets.TENANT_ID }}
  subscription_id: ${{ secrets.AZURE_SUBSCRIPTION }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Azure Login and Deploy
      uses: Azure/cli@v1.0.7
      with:
        inlineScript: | 
          az login --service-principal -u ${{ secrets.APP_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}    
          
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: '1.1.0'

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ./iac
      run: terraform init

    - name: Terraform Plan
      working-directory: ./iac
      run: terraform plan
      
    - name: Terraform Apply
      working-directory: ./iac
      run: terraform apply
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean package -DskipTests=false

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.TAG }}
        context: .
        dockerfile: ${{ env.DOCKERFILE_PATH }}

    - name: Azure Login
      #uses: azure/login@v1
      uses: Azure/cli@v1.0.7
      with:
        inlineScript: | 
          az login --service-principal -u ${{ secrets.APP_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}
          az webapp config container set -g ${{ env.APP_RESOURCE_GROUP }} --plan ${{ secrets.APP_SERVICE_PLAN }} -n ${{ env.WEB_APP_NAME }}\
            --docker-custom-image-name "${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.TAG }}" \
            --docker-registry-server-url ${{ env.DOCKER_REGISTRY }}\
            --docker-registry-server-user ${{ secrets.AZURE_REGISTRY_USERNAME }})\
            --docker-registry-server-password ${{ secrets.AZURE_REGISTRY_PASSWORDÂ }}


